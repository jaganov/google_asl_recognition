#!/bin/bash

# üçé –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–±–æ—Ä–∫–∞ ASL Recognition –¥–ª—è macOS
# –ê–≤—Ç–æ—Ä: ASL Recognition Team
# –í–µ—Ä—Å–∏—è: 1.0

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

info() {
    echo -e "${BLUE}[BUILD]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ macOS
if [[ "$OSTYPE" != "darwin"* ]]; then
    error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è macOS"
    exit 1
fi

log "üçé –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É ASL Recognition –¥–ª—è macOS"

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
APP_NAME="ASL Recognition"
BUILD_METHOD=""
GUI_MODE=false
CLEAN_BUILD=false

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
while [[ $# -gt 0 ]]; do
    case $1 in
        --method)
            BUILD_METHOD="$2"
            shift 2
            ;;
        --gui)
            GUI_MODE=true
            shift
            ;;
        --clean)
            CLEAN_BUILD=true
            shift
            ;;
        --help|-h)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–æ–ø—Ü–∏–∏]"
            echo ""
            echo "–û–ø—Ü–∏–∏:"
            echo "  --method py2app|pyinstaller  –ú–µ—Ç–æ–¥ —Å–±–æ—Ä–∫–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: py2app)"
            echo "  --gui                        –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å GUI –≤–µ—Ä—Å–∏—é"
            echo "  --clean                      –û—á–∏—Å—Ç–∏—Ç—å –ø–µ—Ä–µ–¥ —Å–±–æ—Ä–∫–æ–π"
            echo "  --help, -h                   –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
            echo ""
            echo "–ü—Ä–∏–º–µ—Ä—ã:"
            echo "  $0                           # –°–±–æ—Ä–∫–∞ —Å py2app (–∫–æ–Ω—Å–æ–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)"
            echo "  $0 --gui                     # –°–±–æ—Ä–∫–∞ GUI –≤–µ—Ä—Å–∏–∏"
            echo "  $0 --method pyinstaller      # –°–±–æ—Ä–∫–∞ —Å PyInstaller"
            echo "  $0 --clean --gui             # –û—á–∏—Å—Ç–∫–∞ –∏ —Å–±–æ—Ä–∫–∞ GUI"
            exit 0
            ;;
        *)
            error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
            echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
            exit 1
            ;;
    esac
done

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–µ—Ç–æ–¥–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
if [[ -z "$BUILD_METHOD" ]]; then
    BUILD_METHOD="py2app"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–∞ —Å–±–æ—Ä–∫–∏
if [[ "$BUILD_METHOD" != "py2app" && "$BUILD_METHOD" != "pyinstaller" ]]; then
    error "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –º–µ—Ç–æ–¥ —Å–±–æ—Ä–∫–∏: $BUILD_METHOD"
    exit 1
fi

log "–ú–µ—Ç–æ–¥ —Å–±–æ—Ä–∫–∏: $BUILD_METHOD"
if $GUI_MODE; then
    log "–†–µ–∂–∏–º: GUI –≤–µ—Ä—Å–∏—è"
else
    log "–†–µ–∂–∏–º: –ö–æ–Ω—Å–æ–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è"
fi

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É manual
if [[ ! -d "manual" ]]; then
    error "–ü–∞–ø–∫–∞ 'manual' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞."
    exit 1
fi

cd manual
log "–ü–µ—Ä–µ—Ö–æ–¥ –≤ –ø–∞–ø–∫—É manual: $(pwd)"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Python
if ! command -v python3 &> /dev/null; then
    error "Python 3 –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.8+"
    exit 1
fi

PYTHON_VERSION=$(python3 --version)
log "–ù–∞–π–¥–µ–Ω $PYTHON_VERSION"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [[ -z "$VIRTUAL_ENV" ]]; then
    warn "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ"
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        log "–ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞"
        exit 1
    fi
else
    log "–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ: $VIRTUAL_ENV"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

check_package() {
    if python3 -c "import $1" &> /dev/null; then
        log "‚úÖ $1 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        error "‚ùå $1 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install $2"
        exit 1
    fi
}

check_package "cv2" "opencv-python"
check_package "mediapipe" "mediapipe"
check_package "torch" "torch"
check_package "numpy" "numpy"

if [[ "$BUILD_METHOD" == "py2app" ]]; then
    check_package "py2app" "py2app"
else
    check_package "PyInstaller" "pyinstaller"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π
info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π..."
MODEL_FOUND=false

check_models_in() {
    local dir=$1
    if [[ -d "$dir" ]]; then
        local model_count=$(find "$dir" -name "*.pth" | wc -l)
        if [[ $model_count -gt 0 ]]; then
            log "‚úÖ –ù–∞–π–¥–µ–Ω–æ $model_count –º–æ–¥–µ–ª–µ–π –≤ $dir"
            MODEL_FOUND=true
        fi
    fi
}

check_models_in "models"
check_models_in "../models"

if ! $MODEL_FOUND; then
    warn "‚ö†Ô∏è –ú–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –º–æ–¥–µ–ª–µ–π."
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–±–æ—Ä–∫—É? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

# –í—ã–±–æ—Ä –≥–ª–∞–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
if $GUI_MODE; then
    MAIN_FILE="asl_recognition_gui_mac.py"
    info "–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª: $MAIN_FILE (GUI –≤–µ—Ä—Å–∏—è)"
else
    MAIN_FILE="step5_live_recognition_mac.py"
    info "–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª: $MAIN_FILE (–∫–æ–Ω—Å–æ–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
if [[ ! -f "$MAIN_FILE" ]]; then
    error "–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $MAIN_FILE"
    exit 1
fi

# –û—á–∏—Å—Ç–∫–∞ (–µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è)
if $CLEAN_BUILD; then
    info "–û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–±–æ—Ä–æ–∫..."
    rm -rf build dist
    log "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
mkdir -p dist

# –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
info "üî® –ù–∞—á–∏–Ω–∞–µ–º —Å–±–æ—Ä–∫—É —Å $BUILD_METHOD..."

if [[ "$BUILD_METHOD" == "py2app" ]]; then
    # –°–±–æ—Ä–∫–∞ —Å py2app
    if $GUI_MODE; then
        # –î–ª—è GUI –Ω—É–∂–Ω–æ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å setup_mac.py
        info "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ setup_mac.py –¥–ª—è GUI –≤–µ—Ä—Å–∏–∏..."
        sed -i.bak "s/step5_live_recognition_mac.py/asl_recognition_gui_mac.py/" setup_mac.py
    fi
    
    log "–ó–∞–ø—É—Å–∫ py2app..."
    python3 setup_mac.py py2app
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π setup_mac.py
    if $GUI_MODE && [[ -f "setup_mac.py.bak" ]]; then
        mv setup_mac.py.bak setup_mac.py
    fi
    
    APP_PATH="dist/$APP_NAME.app"
    
else
    # –°–±–æ—Ä–∫–∞ —Å PyInstaller
    if $GUI_MODE; then
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π spec —Ñ–∞–π–ª –¥–ª—è GUI
        info "–°–æ–∑–¥–∞–Ω–∏–µ spec —Ñ–∞–π–ª–∞ –¥–ª—è GUI –≤–µ—Ä—Å–∏–∏..."
        SPEC_FILE="asl_recognition_gui_mac.spec"
        sed "s/step5_live_recognition_mac.py/asl_recognition_gui_mac.py/" asl_recognition_mac.spec > "$SPEC_FILE"
    else
        SPEC_FILE="asl_recognition_mac.spec"
    fi
    
    log "–ó–∞–ø—É—Å–∫ PyInstaller..."
    pyinstaller "$SPEC_FILE"
    
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π spec —Ñ–∞–π–ª
    if $GUI_MODE && [[ -f "asl_recognition_gui_mac.spec" ]]; then
        rm "asl_recognition_gui_mac.spec"
    fi
    
    APP_PATH="dist/$APP_NAME.app"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
if [[ -d "$APP_PATH" ]]; then
    log "‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞–∑–º–µ—Ä–µ
    APP_SIZE=$(du -sh "$APP_PATH" | cut -f1)
    log "üì¶ –†–∞–∑–º–µ—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: $APP_SIZE"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    if [[ -f "$APP_PATH/Contents/MacOS/$APP_NAME" ]]; then
        log "‚úÖ –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω"
    else
        warn "‚ö†Ô∏è –ò—Å–ø–æ–ª–Ω—è–µ–º—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏
    ABS_PATH=$(cd "$(dirname "$APP_PATH")" && pwd)/$(basename "$APP_PATH")
    info "üìç –ü—É—Ç—å –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é: $ABS_PATH"
    
    # –°–Ω—è—Ç–∏–µ –∫–∞—Ä–∞–Ω—Ç–∏–Ω–∞ (–¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏)
    log "–°–Ω—è—Ç–∏–µ –∫–∞—Ä–∞–Ω—Ç–∏–Ω–∞ —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    xattr -dr com.apple.quarantine "$APP_PATH" 2>/dev/null || true
    
    # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    echo ""
    log "üéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!"
    echo ""
    echo "–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "1. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: open '$ABS_PATH'"
    echo "2. –†–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ –≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Å–∏—Å—Ç–µ–º—ã"
    echo "3. –°–æ–∑–¥–∞–π—Ç–µ DMG –∏–Ω—Å—Ç–∞–ª–ª—è—Ç–æ—Ä (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):"
    echo "   brew install create-dmg"
    echo "   create-dmg --volname '$APP_NAME' '$APP_NAME.dmg' 'dist/'"
    echo ""
    
    # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
    read -p "–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–µ–π—á–∞—Å? (y/N): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        log "–ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
        open "$APP_PATH"
    fi
    
else
    error "‚ùå –°–±–æ—Ä–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ $APP_PATH"
    echo ""
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö –≤—ã—à–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:"
    echo "1. –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
    echo "2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π –º–µ—Ç–æ–¥ —Å–±–æ—Ä–∫–∏"
    echo "3. –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å —Ñ–ª–∞–≥–æ–º --clean"
    exit 1
fi

log "ÔøΩÔøΩ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" 